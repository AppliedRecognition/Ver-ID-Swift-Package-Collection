{"formatVersion":"1.0","generatedAt":"2025-09-24T14:35:32Z","name":"Ver-ID SDK","overview":"Capture and recognize faces","packages":[{"keywords":[],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/AppliedRecognition/Face-Capture-Apple/main/LICENCE.txt"},"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Face-Capture-Apple/main/README.md","url":"https://github.com/AppliedRecognition/Face-Capture-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"FaceCapture","products":[{"name":"FaceCapture","targets":["FaceCapture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceCapture","name":"FaceCapture"}],"toolsVersion":"5.9"}},"summary":"","version":"2.1.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"FaceCapture","products":[{"name":"FaceCapture","targets":["FaceCapture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceCapture","name":"FaceCapture"}],"toolsVersion":"5.9"}},"summary":"","version":"2.0.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"FaceCapture","products":[{"name":"FaceCapture","targets":["FaceCapture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceCapture","name":"FaceCapture"}],"toolsVersion":"5.9"}},"summary":"","version":"2.0.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"FaceCapture","products":[{"name":"FaceCapture","targets":["FaceCapture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceCapture","name":"FaceCapture"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.2"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"FaceCapture","products":[{"name":"FaceCapture","targets":["FaceCapture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceCapture","name":"FaceCapture"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"FaceCapture","products":[{"name":"FaceCapture","targets":["FaceCapture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceCapture","name":"FaceCapture"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Face-Template-Registry-Apple/main/README.md","url":"https://github.com/AppliedRecognition/Face-Template-Registry-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FaceTemplateRegistry","products":[{"name":"FaceTemplateRegistry","targets":["FaceTemplateRegistry"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceTemplateRegistry","name":"FaceTemplateRegistry"}],"toolsVersion":"5.9"}},"summary":"","version":"3.0.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FaceTemplateRegistry","products":[{"name":"FaceTemplateRegistry","targets":["FaceTemplateRegistry"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceTemplateRegistry","name":"FaceTemplateRegistry"}],"toolsVersion":"5.9"}},"summary":"","version":"2.1.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FaceTemplateRegistry","products":[{"name":"FaceTemplateRegistry","targets":["FaceTemplateRegistry"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceTemplateRegistry","name":"FaceTemplateRegistry"}],"toolsVersion":"5.9"}},"summary":"","version":"2.1.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FaceTemplateRegistry","products":[{"name":"FaceTemplateRegistry","targets":["FaceTemplateRegistry"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceTemplateRegistry","name":"FaceTemplateRegistry"}],"toolsVersion":"5.9"}},"summary":"","version":"2.0.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Face-Recognition-ArcFace-Apple/main/README.md","url":"https://github.com/AppliedRecognition/Face-Recognition-ArcFace-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FaceRecognitionArcFace","products":[{"name":"FaceDetectionRetinaFaceOrt","targets":["FaceDetectionRetinaFaceOrt"],"type":{"library":["automatic"]}},{"name":"FaceRecognitionArcFaceCloud","targets":["FaceRecognitionArcFaceCloud"],"type":{"library":["automatic"]}},{"name":"FaceRecognitionArcFaceCore","targets":["FaceRecognitionArcFaceCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceDetectionRetinaFaceOrt","name":"FaceDetectionRetinaFaceOrt"},{"moduleName":"FaceRecognitionArcFaceCloud","name":"FaceRecognitionArcFaceCloud"},{"moduleName":"FaceRecognitionArcFaceCore","name":"FaceRecognitionArcFaceCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.2.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FaceRecognitionArcFace","products":[{"name":"FaceRecognitionArcFaceCloud","targets":["FaceRecognitionArcFaceCloud"],"type":{"library":["automatic"]}},{"name":"FaceRecognitionArcFaceCore","targets":["FaceRecognitionArcFaceCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceRecognitionArcFaceCloud","name":"FaceRecognitionArcFaceCloud"},{"moduleName":"FaceRecognitionArcFaceCore","name":"FaceRecognitionArcFaceCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FaceRecognitionArcFace","products":[{"name":"FaceRecognitionArcFaceCloud","targets":["FaceRecognitionArcFaceCloud"],"type":{"library":["automatic"]}},{"name":"FaceRecognitionArcFaceCore","targets":["FaceRecognitionArcFaceCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceRecognitionArcFaceCloud","name":"FaceRecognitionArcFaceCloud"},{"moduleName":"FaceRecognitionArcFaceCore","name":"FaceRecognitionArcFaceCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Face-Recognition-Dlib-Apple/main/README.md","summary":"Face recognition for iOS based on Dlib","url":"https://github.com/AppliedRecognition/Face-Recognition-Dlib-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FaceRecognitionDlib","products":[{"name":"FaceRecognitionDlib","targets":["FaceRecognitionDlib"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceRecognitionDlib","name":"FaceRecognitionDlib"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.3"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FaceRecognitionDlib","products":[{"name":"FaceRecognitionDlib","targets":["FaceRecognitionDlib"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceRecognitionDlib","name":"FaceRecognitionDlib"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.2"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FaceRecognitionDlib","products":[{"name":"FaceRecognitionDlib","targets":["FaceRecognitionDlib"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceRecognitionDlib","name":"FaceRecognitionDlib"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.1"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Face-Detection-RetinaFace-Apple/main/README.md","summary":"Face detection for Ver-ID SDK using RetinaFace model","url":"https://github.com/AppliedRecognition/Face-Detection-RetinaFace-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FaceDetectionRetinaFace","products":[{"name":"FaceDetectionRetinaFace","targets":["FaceDetectionRetinaFace"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceDetectionRetinaFace","name":"FaceDetectionRetinaFace"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.5"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FaceDetectionRetinaFace","products":[{"name":"FaceDetectionRetinaFace","targets":["FaceDetectionRetinaFace"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceDetectionRetinaFace","name":"FaceDetectionRetinaFace"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.4"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FaceDetectionRetinaFace","products":[{"name":"FaceDetectionRetinaFace","targets":["FaceDetectionRetinaFace"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FaceDetectionRetinaFace","name":"FaceDetectionRetinaFace"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.3"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Spoof-Device-Detection-Ver-ID-3-Apple/main/README.md","summary":"Spoof device detection for Ver-ID 3","url":"https://github.com/AppliedRecognition/Spoof-Device-Detection-Ver-ID-3-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SpoofDeviceDetection","products":[{"name":"SpoofDeviceDetection","targets":["SpoofDeviceDetection"],"type":{"library":["automatic"]}},{"name":"SpoofDeviceDetectionCore","targets":["SpoofDeviceDetectionCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SpoofDeviceDetection","name":"SpoofDeviceDetection"},{"moduleName":"SpoofDeviceDetectionCore","name":"SpoofDeviceDetectionCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.2"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SpoofDeviceDetection","products":[{"name":"SpoofDeviceDetection","targets":["SpoofDeviceDetection"],"type":{"library":["automatic"]}},{"name":"SpoofDeviceDetectionCore","targets":["SpoofDeviceDetectionCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SpoofDeviceDetection","name":"SpoofDeviceDetection"},{"moduleName":"SpoofDeviceDetectionCore","name":"SpoofDeviceDetectionCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SpoofDeviceDetection","products":[{"name":"SpoofDeviceDetection","targets":["SpoofDeviceDetection"],"type":{"library":["automatic"]}},{"name":"SpoofDeviceDetectionCore","targets":["SpoofDeviceDetectionCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SpoofDeviceDetection","name":"SpoofDeviceDetection"},{"moduleName":"SpoofDeviceDetectionCore","name":"SpoofDeviceDetectionCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Spoof-Detection-Fasnet-Apple/main/README.md","summary":"Spoof detection for iOS using FASnet model","url":"https://github.com/AppliedRecognition/Spoof-Detection-Fasnet-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FASnetSpoofDetection","products":[{"name":"FASnetSpoofDetection","targets":["FASnetSpoofDetection"],"type":{"library":["automatic"]}},{"name":"FASnetSpoofDetectionCore","targets":["FASnetSpoofDetectionCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FASnetSpoofDetection","name":"FASnetSpoofDetection"},{"moduleName":"FASnetSpoofDetectionCore","name":"FASnetSpoofDetectionCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FASnetSpoofDetection","products":[{"name":"FASnetSpoofDetection","targets":["FASnetSpoofDetection"],"type":{"library":["automatic"]}},{"name":"FASnetSpoofDetectionCore","targets":["FASnetSpoofDetectionCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FASnetSpoofDetection","name":"FASnetSpoofDetection"},{"moduleName":"FASnetSpoofDetectionCore","name":"FASnetSpoofDetectionCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Spoof-Detection-Fusion-Apple/main/README.md","url":"https://github.com/AppliedRecognition/Spoof-Detection-Fusion-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FusionSpoofDetection","products":[{"name":"FusionSpoofDetection","targets":["FusionSpoofDetection"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FusionSpoofDetection","name":"FusionSpoofDetection"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FusionSpoofDetection","products":[{"name":"FusionSpoofDetection","targets":["FusionSpoofDetection"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FusionSpoofDetection","name":"FusionSpoofDetection"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Ver-ID-2-3-Migration-Apple/main/README.md","summary":"Utility that helps migrating from Ver-ID SDK version 2.* to Ver-ID SDK version 3+.","url":"https://github.com/AppliedRecognition/Ver-ID-2-3-Migration-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"VerID2To3Migration","products":[{"name":"VerID2To3Migration","targets":["VerID2To3Migration"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"VerID2To3Migration","name":"VerID2To3Migration"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.0"}]},{"keywords":["ver-id-3"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/AppliedRecognition/Ver-ID-Common-Types-Apple/main/LICENCE.txt"},"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Ver-ID-Common-Types-Apple/main/README.md","summary":"Collection of types used by Ver-ID face detection and recognition libraries ","url":"https://github.com/AppliedRecognition/Ver-ID-Common-Types-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"VerIDCommonTypes","products":[{"name":"VerIDCommonTypes","targets":["VerIDCommonTypes"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"VerIDCommonTypes","name":"VerIDCommonTypes"}],"toolsVersion":"5.9"}},"summary":"","version":"3.1.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"VerIDCommonTypes","products":[{"name":"VerIDCommonTypes","targets":["VerIDCommonTypes"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"VerIDCommonTypes","name":"VerIDCommonTypes"}],"toolsVersion":"5.9"}},"summary":"","version":"3.1.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"VerIDCommonTypes","products":[{"name":"VerIDCommonTypes","targets":["VerIDCommonTypes"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"VerIDCommonTypes","name":"VerIDCommonTypes"}],"toolsVersion":"5.9"}},"summary":"","version":"3.0.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"VerIDCommonTypes","products":[{"name":"VerIDCommonTypes","targets":["VerIDCommonTypes"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"VerIDCommonTypes","name":"VerIDCommonTypes"}],"toolsVersion":"5.9"}},"summary":"","version":"2.2.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"VerIDCommonTypes","products":[{"name":"VerIDCommonTypes","targets":["VerIDCommonTypes"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"VerIDCommonTypes","name":"VerIDCommonTypes"}],"toolsVersion":"5.9"}},"summary":"","version":"2.1.0"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"maccatalyst","version":"14.0"},{"name":"macos","version":"10.15"}],"packageName":"VerIDCommonTypes","products":[{"name":"VerIDCommonTypes","targets":["VerIDCommonTypes"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"VerIDCommonTypes","name":"VerIDCommonTypes"}],"toolsVersion":"5.9"}},"summary":"","version":"2.0.0"}]},{"keywords":["ver-id-3"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/AppliedRecognition/Ver-ID-3-Serialization-Apple/main/LICENCE.txt"},"summary":"Serialisation library for Ver-ID 3 Swift types","url":"https://github.com/AppliedRecognition/Ver-ID-3-Serialization-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Serialization","products":[{"name":"Serialization","targets":["Serialization"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Serialization","name":"Serialization"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.2"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Serialization","products":[{"name":"Serialization","targets":["Serialization"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Serialization","name":"Serialization"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.1"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Serialization","products":[{"name":"Serialization","targets":["Serialization"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Serialization","name":"Serialization"}],"toolsVersion":"5.9"}},"summary":"","version":"1.1.0"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/AppliedRecognition/Facial-Attribute-Detection-Apple/main/README.md","summary":"Facial attribute detection for iOS","url":"https://github.com/AppliedRecognition/Facial-Attribute-Detection-Apple.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FacialAttributeDetection","products":[{"name":"EyewearDetection","targets":["EyewearDetection"],"type":{"library":["automatic"]}},{"name":"FaceCoveringDetection","targets":["FaceCoveringDetection"],"type":{"library":["automatic"]}},{"name":"FacialAttributeDetectionCore","targets":["FacialAttributeDetectionCore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EyewearDetection","name":"EyewearDetection"},{"moduleName":"FaceCoveringDetection","name":"FaceCoveringDetection"},{"moduleName":"FacialAttributeDetectionCore","name":"FacialAttributeDetectionCore"}],"toolsVersion":"5.9"}},"summary":"","version":"1.0.0"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Applied Recognition Inc.","organization":"Applied Recognition Inc.","organizationalUnit":"CSD8L9EK66","userID":"CSD8L9EK66"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGa1RDQ0JIbWdBd0lCQWdJUVdzMWx3RFRTK3dEc1cvSG1OVHhZV1RBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSTFNRGt5TkRFNU1EazFORm9YRFRJMk1Ea3lOREU1TURrMU0xb3dnWjR4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBEVTBRNFREbEZTelkyTVRzd09RWURWUVFERERKVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGd2NHeHBaV1FnVW1WamIyZHVhWFJwYjI0Z1NXNWpMakVUTUJFR0ExVUVDd3dLUTFORU9FdzVSVXMyTmpFaE1COEdBMVVFQ2d3WVFYQndiR2xsWkNCU1pXTnZaMjVwZEdsdmJpQkpibU11TVFzd0NRWURWUVFHRXdKRFFUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU54OEUwQzFkYWhxa01lL0VQSU1lMHdJbkM4SmM0Rld2ZkZwQ2ZhRjJpM2swTGwzam80L2ZkTmcyZVJ1cSt3OHFNS1RuT3F0NGF0Qk94ZVdPbytlTEZJKzV4WEU0Y0VncUs4eDB0clpYcHcwQzR3RXVRTDVzY3gyV3hHSGhtU1RicHVwaWI2RnJDaGhMMEErR2oxN25razJlNzA5RXRuYm9EQ0hUN2lXOC90dFFzRExEZlRHNmJuNzUyMFJaQUZuWDE4STJUWVdQcjJEV3c3bG8ramZsTWVlOVduNUZ0QUIrQzRZUWhKK3N2T2d5Vy84dllOTU9sT2dEdGNFV2JFY0hldjNoM3p2WnlqSVNzQzJoMlJ4bUZPajBUcE45RGU5dERGN05ldW1KL1lkZjgxL0hSblM4aGxXbjFlNkNDMW5zaDlwdUZIM3N1cHVHcmF4Q2xZL2w4TUNBd0VBQWFPQ0FmRXdnZ0h0TUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVQ2Y3QUZaRDVyMlFLa2hLNUppaGpESmZzcDdJd1FRWUlLd1lCQlFVSEFRRUVOVEF6TURFR0NDc0dBUVVGQnpBQmhpVm9kSFJ3T2k4dmIyTnpjQzVoY0hCc1pTNWpiMjB2YjJOemNEQXpMWGQzWkhKbk16RTVNSUlCSGdZRFZSMGdCSUlCRlRDQ0FSRXdnZ0VOQmdrcWhraUc5Mk5rQlFFd2dmOHdnY01HQ0NzR0FRVUZCd0lDTUlHMkRJR3pVbVZzYVdGdVkyVWdiMjRnZEdocGN5QmpaWEowYVdacFkyRjBaU0JpZVNCaGJua2djR0Z5ZEhrZ1lYTnpkVzFsY3lCaFkyTmxjSFJoYm1ObElHOW1JSFJvWlNCMGFHVnVJR0Z3Y0d4cFkyRmliR1VnYzNSaGJtUmhjbVFnZEdWeWJYTWdZVzVrSUdOdmJtUnBkR2x2Ym5NZ2IyWWdkWE5sTENCalpYSjBhV1pwWTJGMFpTQndiMnhwWTNrZ1lXNWtJR05sY25ScFptbGpZWFJwYjI0Z2NISmhZM1JwWTJVZ2MzUmhkR1Z0Wlc1MGN5NHdOd1lJS3dZQkJRVUhBZ0VXSzJoMGRIQnpPaTh2ZDNkM0xtRndjR3hsTG1OdmJTOWpaWEowYVdacFkyRjBaV0YxZEdodmNtbDBlUzh3RmdZRFZSMGxBUUgvQkF3d0NnWUlLd1lCQlFVSEF3TXdIUVlEVlIwT0JCWUVGRGs0enNRdWp4dXB0U0FxM3Z3NDcvQ3h2NjlETUE0R0ExVWREd0VCL3dRRUF3SUhnREFRQmdvcWhraUc5Mk5rQmdFakJBSUZBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUVlrbFZubUltMkJtWFpTNUlCZTRKQjhxR0N4eGU2R2YzTVhEdURycTVFODkzOEo5cWUvRzhYZ0l6MWxSNitBUkhFOTMxTWdSdFVncmQ3bjJ1Y2NwTEVoWWJwU2pocXhPeHNENit0S0JMbTRZY2VzZ216amlPTFJjV2FHMk5LTEJLYWxWZitPNXlRdUlnUGRhUjlBY1NCR3hLc1IzUmtLRWU4UEJLYm1MVUFSZE5IVllWeHk5TWVPZDhlM3VUVHhlTnd4elpQR0I0dE00YzJ5ZElDUWd5bkFlMk9ZSWVOb0todlpaczN5ZEVzWGZ5ZzhlNVN2NVFBUDVSUjFiUDEwd3UvSzZtUXNadWgwMnNhY0laNGZBbHgrcis1Q0NUc2RpNCtkeUVXeTdFY2JYUWZkYWRZNEdIN3Uwdjhnb3RxV1pPZkRLOU5GN3FRZTA0YVhMdllpUWNnPT0iLAogICAgIk1JSUVVVENDQXptZ0F3SUJBZ0lRZks5cENpVzNPZjU3bTBSNndYakY3akFOQmdrcWhraUc5dzBCQVFzRkFEQmlNUXN3Q1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ2hNS1FYQndiR1VnU1c1akxqRW1NQ1FHQTFVRUN4TWRRWEJ3YkdVZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt4RmpBVUJnTlZCQU1URFVGd2NHeGxJRkp2YjNRZ1EwRXdIaGNOTWpBd01qRTVNVGd4TXpRM1doY05NekF3TWpJd01EQXdNREF3V2pCMU1VUXdRZ1lEVlFRREREdEJjSEJzWlNCWGIzSnNaSGRwWkdVZ1JHVjJaV3h2Y0dWeUlGSmxiR0YwYVc5dWN5QkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFTE1Ba0dBMVVFQ3d3Q1J6TXhFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMlBXSi9LaFpDNGZIVEpFdUxWYVEwM2dkcEREcHBVanZDME8vTFlUN0pGMUZHK1hyV1RZU1hGUmtubXhpTGJUR2w4ck1QUGJXQnBIODVRS21IR3EwZWRWbnk2enBQd2NSNFlTOFJ4MW1qam1pNkxSSjdUclM0UkJnZW82VGpNckEyZ3pBZzlEaitaSFdwNHpJd1hQaXJrYlJZcDJTcUpCZ04zMW9sczJONFB5YituaTc0M3V2TFJmZFcvNkFXU04xRjdnU3dlMGI1VFRPL2lLMW5rbXc1VlcvajRTaVBLaTZ4WWFWRnVRQXlaOEQwTXl6T2haNzFnVmNuZXRIcmcyMUxZd09hVTFBMEV0TU93U2VqU0d4ckM1RFZERE93WXFHbEpoTDMyb05QLzc3SEs2WEY4SjRDakRnWHg5VU8wbTNKUUFhTjRMU1ZwZWxVa2w4WURpYjd3SURBUUFCbzRIdk1JSHNNQklHQTFVZEV3RUIvd1FJTUFZQkFmOENBUUF3SHdZRFZSMGpCQmd3Rm9BVUs5QnBSNVIyQ2Y3MGE0MHVRS2IzUjAxL0NGNHdSQVlJS3dZQkJRVUhBUUVFT0RBMk1EUUdDQ3NHQVFVRkJ6QUJoaWhvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFdGd2NHeGxjbTl2ZEdOaE1DNEdBMVVkSHdRbk1DVXdJNkFob0IrR0hXaDBkSEE2THk5amNtd3VZWEJ3YkdVdVkyOXRMM0p2YjNRdVkzSnNNQjBHQTFVZERnUVdCQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luc2pBT0JnTlZIUThCQWY4RUJBTUNBUVl3RUFZS0tvWklodmRqWkFZQ0FRUUNCUUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUsxbEUrajI0SUYzUkFKSFFyNWZwVGtnNm1LcC9jV1F5WE1UMVo2YjBLb1BqWTNMN1FIUGJDaEFXOGRWSkVINC9NL0J0U1BwM096eGI4cUFIWGZDeEdGSkpXZXZEOG81SmEzVDQzck1NeWdORGk2aFYwQnordVpjcmdaUktlM2poUXhQWWR3eUZvdDMwRVRLWFhJRE1VYWNycHRBR3ZyMDROTSsraStNWnArWHhGUlo3OUpJOUFlWlNXQlpHY2ZkbE5IQXdXeC9lQ0h2RE9zN2JKbUNTMUpnT0xVNWdtM3NVakZUdmcrUlRFbEpkSSttVWN1RVIwNGRkU2R1dmZuU1hQTi93bXdMQ1RiaVpPVENOd01VR2RYcWFwU3FxZHYrOXBvSVo0dnZLN2lxRjBtRHI4L0x2T25QNnBWeHNMUkZvc3psaDZvS3cwRTZlVnphVURTZGxUcz0iLAogICAgIk1JSUV1ekNDQTZPZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRVUZBREJpTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNoTUtRWEJ3YkdVZ1NXNWpMakVtTUNRR0ExVUVDeE1kUVhCd2JHVWdRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhreEZqQVVCZ05WQkFNVERVRndjR3hsSUZKdmIzUWdRMEV3SGhjTk1EWXdOREkxTWpFME1ETTJXaGNOTXpVd01qQTVNakUwTURNMldqQmlNUXN3Q1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ2hNS1FYQndiR1VnU1c1akxqRW1NQ1FHQTFVRUN4TWRRWEJ3YkdVZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt4RmpBVUJnTlZCQU1URFVGd2NHeGxJRkp2YjNRZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEa2tha0pINUhiSGtkUTZ3WHRYbm1FTGVzMm9sZE1WZXlMR1luZStVdHM5UWVySWpBQzZCZysrRkFKMDM5QnFKajUwY3BtbkNSckVkQ2p1K1FiS3NNZmxaNTZES1JIaTF2VUZqY3p5OFFQVGM0VWFkSEpHWEwxWFE3VmYxK2I4aVVEdWxXUFRWME44V1ExSXhWTEZWa2RzNVQzOXB5ZXoxQzZ3VmhRWjQ4SXRDRDN5NndzSUc5d3RqOEJNSXkzUTg4UG5UM3pLMGtvR3NqK3pyVzVEdGxlSE5iTFBiVTZyZlFQRGdDU0M3RWhGaTUwMVR3TjIySVdxNk54a2tkVFZjR3ZMMEd6K1B2amNNM21vMHhGZmg5TWExQ1dRWW5FZEdJTEVJTkJoek9LZ2JFd1dPeGFCREtNYUxPUEhkNWxjLzluWG1XOFNkaDJuek1VWmFGM2xNa3RBZ01CQUFHamdnRjZNSUlCZGpBT0JnTlZIUThCQWY4RUJBTUNBUVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSzlCcFI1UjJDZjcwYTQwdVFLYjNSMDEvQ0Y0d0h3WURWUjBqQkJnd0ZvQVVLOUJwUjVSMkNmNzBhNDB1UUtiM1IwMS9DRjR3Z2dFUkJnTlZIU0FFZ2dFSU1JSUJCRENDQVFBR0NTcUdTSWIzWTJRRkFUQ0I4akFxQmdnckJnRUZCUWNDQVJZZWFIUjBjSE02THk5M2QzY3VZWEJ3YkdVdVkyOXRMMkZ3Y0d4bFkyRXZNSUhEQmdnckJnRUZCUWNDQWpDQnRocUJzMUpsYkdsaGJtTmxJRzl1SUhSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnWW5rZ1lXNTVJSEJoY25SNUlHRnpjM1Z0WlhNZ1lXTmpaWEIwWVc1alpTQnZaaUIwYUdVZ2RHaGxiaUJoY0hCc2FXTmhZbXhsSUhOMFlXNWtZWEprSUhSbGNtMXpJR0Z1WkNCamIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnBZMkYwYVc5dUlIQnlZV04wYVdObElITjBZWFJsYldWdWRITXVNQTBHQ1NxR1NJYjNEUUVCQlFVQUE0SUJBUUJjTnBsTUxYaTM3WXliM1BOM20vSjIwbmN3VDhFZmhZT0ZHNWs5UnpmeXFadEFqaXpVc1pBUzJMNzBjNXZ1MG1RUHkzbFBOTmlpUHZsNC8ydklCK3g5T1lPTFV5RFRPTVN4djVwUENtdi9LL3hacHdVSmZCZEFWaEVlZE5PM2l5TTdSNlBWYnlUaTY5RzNjTjhQUmVFbnl2RnRlTzNudFJjWHFOeCtJalhLSmRYWkQ5WnIxS0lrSXhIM29heVBjNEZneGh0YkNTK1NzdmhFU1BCZ09KNFY5VDBtWnlDS00ycjNEWUxQM3V1akwvbFRhbHRrd0dNemQvYzZCeXhXNjlvUElRN2F1bk1aVDdYWk5uL0JoMVhacDVtNU1rTDcyTlZ4bm42aFVyY2J2Wk5DSkJJcXh3OGR0azJjWG1QSVM0QVhVS3FLMWRyay9OQUpCemV3ZFhVaCIKICBdCn0..ygY46oqGRgbT2whctwUpJsxOXix3nRBtulvCm2DZS5sZ5y29d811kO57yEr-L9E4tgs63t1yHFedGQp1u1EVZBbds6VoBwRe2jlcYKCkYhN4USe5DIG5ZzVwPdmfKHFEhfcbS16kF7-c1ZoBPkPTRqy99Bv1qJggOmxJADZf6uebvuqBl7xI-Ay4oFTZ09IKuWOahsuFG_enDFLPaWSgADZTsdRW0UUruaAa31WVpOuG9WrpJB0Jl58w9qkKCseBJ9ishWybTqRyhYnHqvO1GpeguHkzAflDdT_zmY_6S4ZfS7l2cNeiYQU7XD40GO4QL0EzPbjyIxD9hW7q2PwlMQ"}}